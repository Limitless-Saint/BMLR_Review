library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(pander)
library(tidyverse)
help(rep)
rep("linear", 200)
rep("logistic", 200)
set.seed(0)
dat <- tibble(x=runif(200, -5, 10),
p=exp(-2+1*x)/(1+exp(-2+1*x)),
y=rbinom(200, 1, p),
y2=.3408+.0901*x,
logit=log(p/(1-p)))
dat2 <- tibble(x = c(dat$x, dat$x),
y = c(dat$y2, dat$p),
`Regression model` = c(rep("linear", 200),
rep("logistic", 200)))
View(dat2)
View(dat)
rrHale.df = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/RR_Data_Hale.csv")
View(rrHale.df)
rrHale.df %>%
select(community = County, pctBlack = X..Pop..Black,
distance = Distance.from.RR,
YesVotes = Yes.1st.Vote,
NumVotes = Num.Voting.1st) %>%
filter(!is.na(pctBlack)) %>%
mutate(propYes = YesVotes / NumVotes,
InFavor = (propYes > .50))
rrHale.df %>%
select(community = County, pctBlack = '% Pop. Black',
distance = Distance.from.RR,
YesVotes = Yes.1st.Vote,
NumVotes = Num.Voting.1st) %>%
filter(!is.na(pctBlack)) %>%
mutate(propYes = YesVotes / NumVotes,
InFavor = (propYes > .50))
rrHale.df %>%
select(community = County, pctBlack = `% Pop. Black`,
distance = `Distance from RR`,
YesVotes = `Yes 1st Vote`,
NumVotes = `Num Voting 1st`) %>%
filter(!is.na(pctBlack)) %>%
mutate(propYes = YesVotes / NumVotes,
InFavor = (propYes > .50))
rrHale.df =  rrHale.df %>%
select(community = County, pctBlack = `% Pop. Black`,
distance = `Distance from RR`,
YesVotes = `Yes 1st Vote`,
NumVotes = `Num Voting 1st`) %>%
filter(!is.na(pctBlack)) %>%
mutate(propYes = YesVotes / NumVotes,
InFavor = (propYes > .50))
rr_scatter = rrHale.df %>% ggplot(mapping = aes(x = distance, y = pctBlack)) + geom_scatterplot(shape = InFavor)
rr_scatter = rrHale.df %>% ggplot(mapping = aes(x = distance, y = pctBlack)) + geom_point(shape = InFavor)
rr_scatter = rrHale.df %>% ggplot(mapping = aes(x = distance, y = pctBlack, color = InFavor)) + geom_point(mapping = aes(shape = InFavor), sized = 2.5)
rr_scatter = rrHale.df %>% ggplot(mapping = aes(x = distance, y = pctBlack, color = InFavor)) +
geom_point(mapping = aes(shape = InFavor), size = 2.5)
library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(pander)
library(tidyverse)
rrHale.df = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/RR_Data_Hale.csv")
rrHale.df =  rrHale.df %>%
select(community = County, pctBlack = `% Pop. Black`,
distance = `Distance from RR`,
YesVotes = `Yes 1st Vote`,
NumVotes = `Num Voting 1st`) %>%
filter(!is.na(pctBlack)) %>%
mutate(propYes = YesVotes / NumVotes,
InFavor = (propYes > .50))
rr_scatter = rrHale.df %>% ggplot(mapping = aes(x = distance, y = pctBlack, color = InFavor)) +
geom_point(mapping = aes(shape = InFavor), size = 2.5) + ylab("Percent Black residents in the community") +
xlab("Distance to the proposed railroad")
rr_scatter
View(rrHale.df)
total_proportion = sum(rrHale.df$YesVotes)/sum(rrHale.df$NumVotes)
total_proportion
rrHale.df = rrHale.df %>% mutate(logits = log(YesVotes/(NumVotes - YesVotes)))
phat <- with(rrHale.df, (YesVotes+.5)/(NumVotes+1))
rrHale.df = rrHale.df %>% select(1:8)
View(rrHale.df)
View(rrHale.df)
rrHale.df = rrHale.df %>% select(-logits)
View(rrHale.df)
rrHale.df$elogit <- log(phat/(1-phat))
rrHale.df$Greensboro <- ifelse(rrHale.df$community=="Greensboro", "Greensboro", NA)
logits_plot_dis = rrHale.df %>% ggplot(mapping = aes(x = distance, y = elogit)) + ggpoint(shape = 1) +
geom_smooth(method = lm, se = false) + xlab("distance") + ylab("empiriacal logits")
logits_plot_dis = rrHale.df %>% ggplot(mapping = aes(x = distance, y = elogit)) + geom_point(shape = 1) +
geom_smooth(method = lm, se = false) + xlab("distance") + ylab("empiriacal logits")
logits_plot_dis = rrHale.df %>% ggplot(mapping = aes(x = distance, y = elogit)) + geom_point(shape = 1) +
geom_smooth(method = lm, se = false) + xlab("distance") + ylab("empiriacal logits")
logits_plot_dis = rrHale.df %>% ggplot(mapping = aes(x = distance, y = elogit)) + geom_point(shape = 1) +
geom_smooth(method = 'lm', se = FALSE) + xlab("distance") + ylab("empiriacal logits")
logits_plot_black = rrHale.df %>% ggplot(mapping = aes(x = pctBlack, y = elogit)) + geom_point(shape = 1) +
geom_smooth(method = lm, se = FALSE) + xlab("percent Black") + ylab("empiriacal logits") +
geom_text(mapping = aes(label = Greensboro), nudge_x = 7.5, nudge_y = -0.5)
grid.arrange(logits_plot_dis, logits_plot_black, ncol = 1)
help(correlation)
corr(rrHale.df)
cor(rrHale.df)
cor(x = rrHale.df$distance, y = rrHale.df$pctBlack)
model.HaleD = glm(data = rrHale.df, formula = cbind(YesVotes, NumVotes - YesVotes) ~ distance, family = binomial)
summary(model.HaleD)
model.HaleBD = glm(data = rrHale.df, formula = cbind(YesVotes, NumVotes - YesVotes) ~ distance + pctBlack, family = binomial)
summary(model.HaleBD)
esp(coeff(model.HaleBD))
xsp(coeff(model.HaleBD))
exp(coeff(model.HaleBD))
exp(coef(model.HaleBD))
drop_in_dev = anova(model.HaleD, model.HaleBD, test = 'Chisq')
drop_in_dev
exp(confint(model.HaleBD))
1 - pchisq(q = model.HaleBD$deviance,df = model.HaleBD$df.residual)
model.HaleBD$df.residual
model.HaleBxD = glm(data = rrHale.df, formula = cbind(YesVotes, NumVotes - YesVotes) ~ distance + pctBlack +
distance:pctBlack, family = binomial)
summary(model.HaleBxD)
drop_in_dev_BxD = anova(model.HaleBD, model.HaleBxD, test = 'Chisq')
drop_in_dev_BxD
rrHale.df = rrHale.df %>%  mutate(residBxD = residuals(model.BxD), fit.BxD = fitted.values(model.HaleBxD))
rrHale.df = rrHale.df %>%  mutate(residBxD = residuals(model.HaleBxD), fit.BxD = fitted.values(model.HaleBxD))
ggplot(rrHale.df, aes(x = fit.BxD, y = resid.BxD)) +
geom_point() +
geom_text(aes(label=Greensboro), nudge_x = -.075) +
xlab("Fitted values from interaction model") +
ylab("Deviance residuals from interaction model")
rrHale.df = rrHale.df %>%  mutate(resid.BxD = residuals(model.HaleBxD), fit.BxD = fitted.values(model.HaleBxD))
ggplot(rrHale.df, aes(x = fit.BxD, y = resid.BxD)) +
geom_point() +
geom_text(aes(label=Greensboro), nudge_x = -.075) +
xlab("Fitted values from interaction model") +
ylab("Deviance residuals from interaction model")
help(geom_text)
help(glm)
model.HaleBxDq = glm(data = rrHale.df, formula = cbind(YesVotes, NumVotes - YesVotes) ~ distance + pctBlack +
distance:pctBlack, family = quasibinomial)
summary(model.HaleBxDq)
model.HaleBxDq_inter_rm = glm(data = rrHale.df, formula = cbind(YesVotes, NumVotes - YesVotes) ~ distance + pctBlack,
family = quasibinomial)
summary(model.HaleBxDqinter_rm)
summary(model.HaleBxDq_inter_rm)
library(foreign)
help("read.spss")
risk2009.data = foreign::read.spss("data/yrbs09.sav", to.data.frame=TRUE)
risk2009.data = foreign::read.spss(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/yrbs09.sav", to.data.frame=TRUE)
View(risk2009.data)
help(names)
names(risk2009.data)
set.seed(33)
risk2009.samp <- risk2009.data %>%
sample_n(500)
rm(risk2009.data)
View(risk2009.samp)
help(with)
sex = with(data = risk2009.samp, expr = Q2)
sex = with(data = risk2009.samp, if_else(sex == "Female", 0, 1))
help(if_else)
help(factor)
sex.l=with(risk2009.samp,factor(x = sex, labels = c("Female", "Male")))
table(sex.l)
help(table)
lose.wt4 = with(risk2009.samp,Q66)
table(lose.wt4)
lose.wt2= with(risk2009.samp,ifelse(Q66=="Lose weight",1,0))
table(lose.wt2)
lose.wt.l=with(risk2009.samp,factor(lose.wt2, labels = c("No weight loss", "Lose weight")))
table(lose.wt.l)
sport4 = with(risk2009.samp,Q84)
table(sport4)
sport =  with(risk2009.samp,ifelse(Q84=="0 teams",0,1))
sport.l=with(risk2009.samp,factor(sport, labels = c("No sports", "Sports")))
table(sport.l)
media=with(risk2009.samp,as.numeric(Q81)) # hours of TV per day
table(media)
media=media-2
table(media)
media=ifelse(media==0,0.5,media)
media=ifelse(media==-1,0,media)
table(media)
media=with(risk2009.samp,as.numeric(Q81)) # hours of TV per day
table(media)
media=media-2
table(media)
media=ifelse(media==0,0.5,media)
table(media)
media=ifelse(media==-1,0,media)
table(media)
table(sport.l)
risk2009 <- risk2009.samp %>%
mutate(sex = sex.l, lose.wt = lose.wt.l, sport = sport.l,
media = media, lose.wt.01 = lose.wt2) %>%
mutate(sport_fac = sport4,
sport_num = parse_number(as.character(sport4))) %>%
select(lose.wt, lose.wt.01, sex, sport, sport_fac,
sport_num, media, bmipct) %>%
filter(complete.cases(.))
rm(risk2009.samp)
help("write_csv")
write_csv(x = risk2009, "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/risk2009.csv")
write_csv(x = risk2009, file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/risk2009.csv")
View(risk2009)
prop.table(x = risk2009$lose.wt.01)
table(x = risk2009$lose.wt.01)
prop.table(table(x = risk2009$lose.wt.01))
ggplot(data = risk2009, aes(x = sex, fill = lose.wt)) +
geom_bar(position = "fill") +
ylab("Proportion") + scale_fill_grey()
risk2009 %>%
group_by(sex, lose.wt) %>%
summarise(mean = mean(bmipct), sd = sd(bmipct), n = n())
risk2009 = risk2009 %>%  group_by(sex) %>% mutate( BMIcuts = cut_number(bmipct,10))
emplogit1 = risk2009 %>% group_by(sex) %>%  summarise(prop.lose = mean(lose.wt.01), n = n(), midpoint = median(bmipct)) %>%
mutate(prop.lose = if_else(condition = prop.lose == 0, true = 0.01, false = prop.lose), emplogit = log(prop.lose/(1-prop.lose)))
View(risk2009)
View(emplogit1)
emplogit1 = risk2009 %>% group_by(sex, BMIcuts) %>%  summarise(prop.lose = mean(lose.wt.01), n = n(), midpoint = median(bmipct)) %>%
mutate(prop.lose = if_else(condition = prop.lose == 0, true = 0.01, false = prop.lose), emplogit = log(prop.lose/(1-prop.lose)))
View(emplogit1)
ggplot(data = emplogit1, mapping = aes(x = midpoint, y = emplogit, color = sex)) + geom_point(mapping = aes(shape = sex)) +
geom_smooth(mapping = aes(linetype = sex), method = 'lm') + xlab("BMI Percentile") + ylab("Empirical Logits")
model1 = glm(data = risk2009, formula = lose.wt.01 ~ sex, family = binomial)
summary(model1)
model1 = glm(data = risk2009, formula = lose.wt.01 ~ female, family = binomial)
risk2009$sex = revlevel(risk2009$sex, ref = "Female")
risk2009$sex = relevel(risk2009$sex, ref = "Female")
model1 = glm(data = risk2009, formula = lose.wt.01 ~ female, family = binomial)
model1 = glm(data = risk2009, formula = lose.wt.01 ~ sex, family = binomial)
summary(model1)
risk2009$sex = relevel(risk2009$sex, ref = "Male")
model1 = glm(data = risk2009, formula = lose.wt.01 ~ sex, family = binomial)
summary(model1)
model2 = glm(data = risk2009, formula = lose.wt.01 ~ sex + bmipct, family = binomial)
summary(model2)
exp(coef(model2))
.011*4792
4792-53
.024*9584
dbinom(1, size = 1, prob = .25)
help(dbinom)
tibble(p = 0.25) %>%
ggplot(aes(x = p)) +
geom_bar(width = 0.01) +
xlim(0,1) +
labs(title = "A very boring plot of a single probability") +
theme_minimal()
library(tidyverse)
set.seed(303)
dbinom(1, size = 1, prob = .25)
tibble(p = 0.25) %>%
ggplot(aes(x = p)) +
geom_bar(width = 0.01) +
xlim(0,1) +
labs(title = "A very boring plot of a single probability") +
theme_minimal()
# simulate the data and store it in a convenient way to plot
rand_bin <- tibble(y = rbinom(n = 1000, size = 10, p = 0.5))
# plot
rand_bin %>%
ggplot(aes(x = factor(y))) +
geom_bar() + # appropriate for discrte count of successes
labs(title = "Number of successes in 10 trials",
subtitle = "1000 simulations",
x = "Number of successes out of 10 trials",
y = "Count") +
theme_minimal()
# simulate the data and store it in a convenient way to plot
rand_bin <- tibble(y = rbinom(n = 1000, size = 10, p = 0.5))
# plot
rand_bin %>%
ggplot(aes(x = y)) +
geom_bar() + # appropriate for discrte count of successes
labs(title = "Number of successes in 10 trials",
subtitle = "1000 simulations",
x = "Number of successes out of 10 trials",
y = "Count") +
theme_minimal()
# simulate the data and store it in a convenient way to plot
rand_bin <- tibble(y = rbinom(n = 1000, size = 10, p = 0.5))
# plot
rand_bin %>%
ggplot(aes(x = factor(y))) +
geom_bar() + # appropriate for discrte count of successes
labs(title = "Number of successes in 10 trials",
subtitle = "1000 simulations",
x = "Number of successes out of 10 trials",
y = "Count") +
theme_minimal()
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
View(emplogit1)
exper_tab = table(emplogit1$sex, emplogit1$BMIcuts)
exper_tab
covid = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_6/Age_and_sex_COVID-19_data.csv")
View(covid)
rm(covid)
help(table)
warpbreaks
warp = warpbreaks
View(warp)
with(data = warp, table(wool, tension))
warp_table = with(data = warp, table(wool, tension))
warp_table_3d = with(data = warp, table(breaks, wool, tension))
warp_table
warp_table_3d
warp_table
sum(warp_table)
warp_table/sum(warp_table)
help("margin.table")
margin.table(warp_table)
margin.table(warp_table, margin = 1)/sum(margin.table(warp_table, margin = 1)
)
prop.table(warp_table)
