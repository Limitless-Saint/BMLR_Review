scenario_2 %>%
summarise(mean_2a = mean(count_2a), sd_2a = sd(count_2a),
mean_2b = mean(count_2b), sd_2b = sd(count_2b) )
scenario2Tab <- scenario_2 %>%
group_by(dose) %>%
summarise(mean_2a_pi = round(mean(pi_2a),3), sd_2a_pi = round(sd(pi_2a),3),
mean_2a_cnt = round(mean(count_2a),3), sd_2a_cnt = round(sd(count_2a),3),
mean_2b_pi = round(mean(pi_2b),3), sd_2b_pi = round(sd(pi_2b),3),
mean_2b_cnt = round(mean(count_2b),3), sd_2b_cnt = round(sd(count_2b),3)) %>%
as.data.frame()
colnames(scenario2Tab) <- c("Dosage","Mean p", "SD p",
"Mean Count", "SD Count", "Mean p", "SD p",
"Mean Count", "SD Count")
kable(scenario2Tab, booktabs = T,
caption="Summary statistics of Scenario 2 by dose.") %>%
add_header_above(c(" " = 1, "Scenario 2a" = 4,
"Scenario 2b" = 4)) %>%
kable_styling(latex_options = "scale_down") %>%
column_spec(c(4:5,8:9), width = "1cm")
scenario_2 <- scenario_2 %>%
mutate(dose = dose,
phat_2a = count_2a / 10, phat_2b = count_2b / 10,
logit_2a = log ((count_2a + 0.5) / (10 - count_2a + 0.5)),
logit_2b = log ((count_2b + 0.5) / (10 - count_2b + 0.5)) )
fit_2a_binom = glm(phat_2a ~ dose, family=binomial, weight=rep(10,24), data=scenario_2)
summary(fit_2a_binom)
exp(confint(fit_2a_binom))
fit_2a_quasi = glm(phat_2a ~ dose, family=quasibinomial, weight=rep(10,24),
data=scenario_2)
summary(fit_2a_quasi)
exp(confint(fit_2a_quasi))
fit_2a_binom = glm(phat_2a ~ dose, family=binomial, weight=rep(10,24), data=scenario_2)
summary(fit_2a_binom)
exp(coef(fit_2a_binom))
exp(confint(fit_2a_binom))
fit_2a_quasi = glm(phat_2a ~ dose, family=quasibinomial, weight=rep(10,24),
data=scenario_2)
summary(fit_2a_quasi)
exp(coef(fit_2a_quasi))
exp(confint(fit_2a_quasi))
tBeta <- c("0.067","0.07","0.27","0.27","",
"$\\hat{\\beta}_1$", "1.26","1.26","","")
tSEBeta <- c("0.13","0.12","0.13","0.34","",
"SE $\\hat{\\beta}_1$", "0.16","0.18","","")
tTStat <- c("0.52","0.55","2.059","0.786","",
"$t$", "7.725","6.866","","")
tPVal <- c("0.61","0.59","0.039","0.44","",
"p value", "1.12e-14","6.77e-07","","")
tPhi <- c("1","0.89","1","6.86","",
"$\\phi$", "1","1.27","","")
tEst <- c("0.52","0.52","0.57","0.57","",
"Est odds ratio", "3.54","3.54","","")
tCI <- c("0.45 - 0.58","0.46 - 0.58","0.50 - 0.63","0.40 - 0.72","",
"CI odds ratio", "2.61 - 4.96","2.51 - 5.19","","")
tMeanCount <- c("5.17","X","5.67","X","",
"Mean count Dose=1", "","X","3.50","X")
tSDCount <- c("1.49","X","4.10","X","1.835",
"SD count Dose=1", "3.17","X","2.881","X")
tGOFP <- c("","X","","X","",
"GOF p value", "","X","","X")
scenarioSimTab <- tibble(tScenario, tModel, tModelName, tBeta, tSEBeta, tTStat, tPVal, tPhi, tEst, tCI, tMeanCount, tSDCount, tGOFP)
colnames(scenarioSimTab) <- c("Scenario", "Model", "Model Name", "$\\hat{\\beta}_0$", "SE $\\hat{\\beta}_0$", "$t$", "p value", "$\\phi$", "Est prob", "CI prob", "Mean count", "SD count", "GOF p value")
kable(scenarioSimTab, booktabs=T, caption="Summary of simulations for Dams and Pups case study.", escape=F) %>%
kable_styling(latex_options = "scale_down", font_size = 9) %>%
row_spec(6, bold=T) %>%
column_spec(9:13, width = "5em")
tBeta <- c("0.067","0.07","0.27","0.27","",
"$\\hat{\\beta}_1$", "1.26","1.26","","")
tSEBeta <- c("0.13","0.12","0.13","0.34","",
"SE $\\hat{\\beta}_1$", "0.16","0.18","","")
tTStat <- c("0.52","0.55","2.059","0.786","",
"$t$", "7.725","6.866","","")
tPVal <- c("0.61","0.59","0.039","0.44","",
"p value", "1.12e-14","6.77e-07","","")
tPhi <- c("1","0.89","1","6.86","",
"$\\phi$", "1","1.27","","")
tEst <- c("0.52","0.52","0.57","0.57","",
"Est odds ratio", "3.54","3.54","","")
tCI <- c("0.45 - 0.58","0.46 - 0.58","0.50 - 0.63","0.40 - 0.72","",
"CI odds ratio", "2.61 - 4.96","2.51 - 5.19","","")
tMeanCount <- c("5.17","X","5.67","X","",
"Mean count Dose=1", "3.17","X","3.50","X")
tSDCount <- c("1.49","X","4.10","X","",
"SD count Dose=1", "1.835","X","2.881","X")
tGOFP <- c("","X","","X","",
"GOF p value", "","X","","X")
scenarioSimTab <- tibble(tScenario, tModel, tModelName, tBeta, tSEBeta, tTStat, tPVal, tPhi, tEst, tCI, tMeanCount, tSDCount, tGOFP)
colnames(scenarioSimTab) <- c("Scenario", "Model", "Model Name", "$\\hat{\\beta}_0$", "SE $\\hat{\\beta}_0$", "$t$", "p value", "$\\phi$", "Est prob", "CI prob", "Mean count", "SD count", "GOF p value")
kable(scenarioSimTab, booktabs=T, caption="Summary of simulations for Dams and Pups case study.", escape=F) %>%
kable_styling(latex_options = "scale_down", font_size = 9) %>%
row_spec(6, bold=T) %>%
column_spec(9:13, width = "5em")
fit_2b_binom = glm(phat_2b ~ dose, family=binomial, weight=rep(10,24), data=scenario_2)
summary(fit_2b_binom)
exp(coef(fit_2b_binom))
exp(confint(fit_2b_binom))
fit_2b_quasi = glm(phat_2b ~ dose, family=quasibinomial,
weight=rep(10,24), data=scenario_2)
summary(fit_2b_quasi)
exp(coef(fit_2b_quasi))
exp(confint(fit_2b_quasi))
tBeta <- c("0.067","0.07","0.27","0.27","",
"$\\hat{\\beta}_1$", "1.26","1.26","1.46","1.46")
tSEBeta <- c("0.13","0.12","0.13","0.34","",
"SE $\\hat{\\beta}_1$", "0.16","0.18","0.18","0.25")
tTStat <- c("0.52","0.55","2.059","0.786","",
"$t$", "7.725","6.866","8.11","5.84")
tPVal <- c("0.61","0.59","0.039","0.44","",
"p value", "1.12e-14","6.77e-07","5.02e-16","7.1e-06")
tPhi <- c("1","0.89","1","6.86","",
"$\\phi$", "1","1.27","1","1.93")
tEst <- c("0.52","0.52","0.57","0.57","",
"Est odds ratio", "3.54","3.54","4.31","4.31")
tCI <- c("0.45 - 0.58","0.46 - 0.58","0.50 - 0.63","0.40 - 0.72","",
"CI odds ratio", "2.61 - 4.96","2.51 - 5.19","3.09 - 6.27","2.74 - 7.35")
tMeanCount <- c("5.17","X","5.67","X","",
"Mean count Dose=1", "3.17","X","3.50","X")
tSDCount <- c("1.49","X","4.10","X","",
"SD count Dose=1", "1.835","X","2.881","X")
tGOFP <- c("","X","","X","",
"GOF p value", "","X","","X")
scenarioSimTab <- tibble(tScenario, tModel, tModelName, tBeta, tSEBeta, tTStat, tPVal, tPhi, tEst, tCI, tMeanCount, tSDCount, tGOFP)
colnames(scenarioSimTab) <- c("Scenario", "Model", "Model Name", "$\\hat{\\beta}_0$", "SE $\\hat{\\beta}_0$", "$t$", "p value", "$\\phi$", "Est prob", "CI prob", "Mean count", "SD count", "GOF p value")
kable(scenarioSimTab, booktabs=T, caption="Summary of simulations for Dams and Pups case study.", escape=F) %>%
kable_styling(latex_options = "scale_down", font_size = 9) %>%
row_spec(6, bold=T) %>%
column_spec(9:13, width = "5em")
treetubes_yr1 <- read_csv("C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_7/treetube.csv") %>%
filter(YEAR == 1990 | YEAR == 1991) %>%
spread(key = YEAR, value = HEIGHT) %>%
mutate(growth_yr1 = `1991` - `1990`) %>%
filter(!is.na(growth_yr1)) %>%
rename(tubes = TUBEX, id = ID, transect = TRANSECT,
species = SPECIES,
height91 = `1991`, height90 = `1990`) %>%
dplyr::select(id, transect, species, tubes, height91,
height90, growth_yr1)
View(treetubes_yr1)
tube_linear <- lm(growth_yr1 ~ tubes, data = treetubes_yr1)
tube_multi1 <- lmer(growth_yr1 ~ tubes + (1|transect),
data = treetubes_yr1)
summary(tube_multi1)
# inputs for the beta distribution must be between 0 and 1
p <- seq(0,1,by=.05)
help(dbeta)
density1 <- dbeta(x = p,shape1 = 5, shape2 = 1)
density1 <- dbeta(x = p,shape1 = 5, shape2 = 1)
density2 <- dbeta(x = p,shape1 = 1, shape2 = 1)
density3 <- dbeta(x = p,shape1 = 3, shape2 = 1)
density4 <- dbeta(x = p,shape1 = 1, shape2 = 3)
density5 <- dbeta(x = p,shape1 = 1, shape2 = 5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5)
library(gridExtra)
library(knitr)
library(kableExtra)
library(lme4)
library(ICC)
library(knitr)
library(tidyverse)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5)
View(beta_data_set)
help("pivot_wider")
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(y = y1, se = FALSE, color = 'red') +
geom_smooth(y = y2, se = FALSE, color = 'blue')
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue')
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'aqua') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple')
help("colors")
colours(distinct = TRUE)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple')
density6 <- dbeta(x = p,shape1 = 2, shape2 = 2)
density7 <- dbeta(x = p,shape1 = 0.5, shape2 = 0.5)
density8 <- dbeta(x = p,shape1 = 2, shape2 = 5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna')
library(gridExtra)
library(knitr)
library(kableExtra)
library(lme4)
library(ICC)
library(knitr)
library(tidyverse)
p <- seq(0,1,by=.05)
# To plot a beta density use dbeta; here I selected a=5, b=1
density1 <- dbeta(x = p,shape1 = 5, shape2 = 1)
density2 <- dbeta(x = p,shape1 = 1, shape2 = 1)
density3 <- dbeta(x = p,shape1 = 3, shape2 = 1)
density4 <- dbeta(x = p,shape1 = 1, shape2 = 3)
density5 <- dbeta(x = p,shape1 = 1, shape2 = 5)
density6 <- dbeta(x = p,shape1 = 2, shape2 = 2)
density7 <- dbeta(x = p,shape1 = 0.5, shape2 = 0.5)
density8 <- dbeta(x = p,shape1 = 2, shape2 = 5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8)
View(beta_data_set)
set.seed(202)
p <- seq(0,1,by=.05)
density1 <- dbeta(x = p,shape1 = 5, shape2 = 1)
density2 <- dbeta(x = p,shape1 = 1, shape2 = 1)
density3 <- dbeta(x = p,shape1 = 3, shape2 = 1)
density4 <- dbeta(x = p,shape1 = 1, shape2 = 3)
density5 <- dbeta(x = p,shape1 = 1, shape2 = 5)
density6 <- dbeta(x = p,shape1 = 2, shape2 = 2)
density7 <- dbeta(x = p,shape1 = 0.5, shape2 = 0.5)
density8 <- dbeta(x = p,shape1 = 2, shape2 = 5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna')
density9 <- dbeta(x = p,shape1 = 2, shape2 = 2.5)
colours
colours()
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna') + geom_smooth(mapping = aes(y = y9), se = FALSE, color = 'salmon')
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna') + geom_smooth(mapping = aes(y = y9), se = FALSE, color = 'salmon')
density1 <- dbeta(x = p,shape1 = 5, shape2 = 5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna') + geom_smooth(mapping = aes(y = y9), se = FALSE, color = 'salmon')
density1 <- dbeta(x = p,shape1 = 0.075, shape2 = 0.075)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna') + geom_smooth(mapping = aes(y = y9), se = FALSE, color = 'salmon')
density1 <- dbeta(x = p,shape1 = 0.90, shape2 = 0.90)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
geom_smooth(mapping = aes(y = y2), se = FALSE, color = 'blue') + geom_smooth(mapping = aes(y = y3), se = FALSE, color = 'green') +
geom_smooth(mapping = aes(y = y4), se = FALSE, color = 'turquoise') + geom_smooth(mapping = aes(y = y5), se = FALSE, color = 'purple') +
geom_smooth(mapping = aes(y = y6), se = FALSE, color = 'yellow') + geom_smooth(mapping = aes(y = y7), se = FALSE, color = 'steelblue') +
geom_smooth(mapping = aes(y = y8), se = FALSE, color = 'sienna') + geom_smooth(mapping = aes(y = y9), se = FALSE, color = 'salmon')
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red')
density1 <- dbeta(x = p,shape1 = 0.5, shape2 = 0.5)
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red') +
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red')
beta_data_set = tibble(x = p, y1 = density1, y2 = density2, y3 = density3, y4 = density4, y5 = density5,
y6 = density6, y7 = density7, y8 = density8, y9 = density9)
ggplot(data = beta_data_set, mapping = aes(x = x)) + geom_smooth(mapping = aes(y = y1), se = FALSE, color = 'red')
library(MASS)
library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(kableExtra)
library(tidyverse)
musicdata = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_8/musicdata.csv")
View(musicdata)
rm(list = ls())
musicdata = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_8/musicdata.c
musicdata = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_8/musicdata.csv")
View(musicdata)
keydata = musicdata %>% select(id, diary, perform_type, memory, audience, na, gender, instrument, mpqab, mpqpem, mpqnem)
library(MASS)
library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(kableExtra)
library(tidyverse)
keydata = musicdata %>% select(id, diary, perform_type, memory, audience, na, gender, instrument, mpqab, mpqpem, mpqnem)
keydata = musicdata %>% dplyr::select(id, diary, perform_type, memory, audience, na, gender, instrument, mpqab, mpqpem, mpqnem)
music.lev2 <-  keydata %>%
group_by(id) %>%
filter(row_number() == 1) %>%
select(id, gender:mpqnem)
music.lev2 <-  keydata %>%
group_by(id) %>%
filter(row_number() == 1) %>%
dplyr::select(id, gender:mpqnem)
View(music.lev2)
help(row_number())
help(row_number)
meanbysubj <- music %>% group_by(id) %>%
summarise(meanbysubj = mean(na, na.rm = TRUE))
meanbysubj <- musicdata %>% group_by(id) %>%
summarise(meanbysubj = mean(na, na.rm = TRUE))
View(meanbysubj)
music.lev2 <- music.lev2 %>%
left_join(meanbysubj, by = "id")
# create ggplot theme for plots
# theme with grid, grey background
theme.1 <- theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title=element_text(hjust=.9,face="italic",size=12))
na.all = musicdata %>%  ggplot(mapping = aes(x = na)) + geom_histogram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlim(10,35) +
xlab("Negative Affect") + ylab("Frequency") + labs(title="(a)")
na.mean <- ggplot(data=music.lev2,aes(x=meanbysubj)) +
geom_histogram(binwidth = 2, fill = "white",
color = "black") +
theme.1 + xlim(10,35) +
xlab("Mean Negative Affect") + ylab("Frequency") + labs(title="(b)")
mli.hist1 <- grid.arrange(na.all,na.mean,ncol=1)
mli.hist1
View(music.lev2)
table(musicdata$perform_type)
prop.table(table(musicdata$perform_type))
prop.table(table(musicdata$memory))
prop.table(table(musicdata$audience))
View(music.lev2)
library(MASS)
library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(kableExtra)
library(tidyverse)
library(gridExtra)
library(mnormt)
library(lme4)
library(knitr)
library(kableExtra)
library(tidyverse)
library(MASS)
musicdata = read_csv(file = "C:/Users/Saint/Documents/School_2017_onward/2021-2022/STA303/BMLR_Review/Ch_8/musicdata.csv")
keydata = musicdata %>% dplyr::select(id, diary, perform_type, memory, audience, na, gender, instrument, mpqab, mpqpem, mpqnem)
View(musicdata)
rm(keydata)
keydata_exer = musicdata %>% dplyr::select(id, diary, perform_type, memory, audience, pa, gender, instrument, mpqab, mpqpem, mpqnem)
View(keydata_exer)
help(mean)
meanby_subj_pa = keydata_exer %>%  group_by(id) %>% summarise(mean_val = mean(id, na.rm = TRUE))
View(meanby_subj_pa)
meanby_subj_pa = keydata_exer %>%  group_by(id) %>% summarise(mean_val = mean(pa, na.rm = TRUE))
View(meanby_subj_pa)
pa.all = keydata_exer %>% ggplot(mapping = aes(x = pa)) + geom_historgram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlm(10,55) + xlabs("Positive Affect") + ylabs("Frequency") + labs(title = "(a)")
pa.all = keydata_exer %>% ggplot(mapping = aes(x = pa)) + geom_histogram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlm(10,55) + xlabs("Positive Affect") + ylabs("Frequency") + labs(title = "(a)")
theme.1 <- theme(axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
plot.title=element_text(hjust=.9,face="italic",size=12))
pa.all = keydata_exer %>% ggplot(mapping = aes(x = pa)) + geom_histogram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlm(10,55) + xlabs("Positive Affect") + ylabs("Frequency") + labs(title = "(a)")
pa.all = keydata_exer %>% ggplot(mapping = aes(x = pa)) + geom_histogram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlim(10,55) + xlabs("Positive Affect") + ylabs("Frequency") + labs(title = "(a)")
pa.all = keydata_exer %>% ggplot(mapping = aes(x = pa)) + geom_histogram(binwidth = 2, fill = "white",color = "black") +
theme.1 + xlim(10,55) + xlab("Positive Affect") + ylab("Frequency") + labs(title = "(a)")
meanby_subj_pa = keydata_exer %>%  group_by(id) %>% summarise(mean_val = mean(pa, na.rm = TRUE))
pa.mean = meanby_subj_pa %>% ggplot(mapping = aes(x = mean_val)) + geom_histogram(binwidth = 2, fill = "white", color = "black") +
theme.1 + xlim(10,55) + xlab("Positive Affect") + ylab("Frequency") + labs(title = "(b)")
pa_eda = grid.arrange(pa.all, pa.mean, ncol = 1)
pa_eda
table(keydata_exer$perform_type)
prop.table(table(keydata_exer$perform_type))
keydata_exer_level_2 = keydata_exer %>%  group_by(id) %>%
filter(row_number() == 1) %>%
dplyr::select(id, gender:mpqnem)   #create data set w/ one observation per subject since covariates do not change per observation
View(keydata_exer_level_2)
help(range)
View(pa.mean)
View(meanby_subj_pa)
mpqab.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqab)) + geom_histogram(binwidth = 2, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpquab") + ylab("Frequency") + labs(title = "MPQAB")
mpqpem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqpem)) + geom_histogram(binwidth = 2, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpqpem") + ylab("Frequency") + labs(title = "MPQPEM")
mpqnem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqnem)) + geom_histogram(binwidth = 2, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpqnem") + ylab("Frequency") + labs(title = "MPQNEM")
mpq.all = grid.arrange(mpqab.all, mpqpem.all, mpqnem.all, ncol = 1)
mpqab.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqab)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpquab") + ylab("Frequency") + labs(title = "MPQAB")
mpqpem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqpem)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpqpem") + ylab("Frequency") + labs(title = "MPQPEM")
mpqnem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqnem)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpqnem") + ylab("Frequency") + labs(title = "MPQNEM")
mpq.all = grid.arrange(mpqab.all, mpqpem.all, mpqnem.all, ncol = 1)
mpqab.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqab)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(5, 35) + xlab("mpquab") + ylab("Frequency") + labs(title = "MPQAB")
mpqpem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqpem)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(20, 70) + xlab("mpqpem") + ylab("Frequency") + labs(title = "MPQPEM")
mpqnem.all = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqnem)) + geom_histogram(binwidth = 5, fill = "white", color = "black") +
theme.1 + xlim(10,50) + xlab("mpqnem") + ylab("Frequency") + labs(title = "MPQNEM")
mpq.all = grid.arrange(mpqab.all, mpqpem.all, mpqnem.all, ncol = 1)
mpq.all = grid.arrange(mpqab.all, mpqpem.all, mpqnem.all, nrow = 1)
prop.table(table(keydata_exer_level_2$gender))
prop.table(table(keydata_exer_level_2$instrument))
pa_perform = keydata_exer %>%  ggplot(mapping = aes(x = as_factor(perform_type) , y = pa )) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_memory = keydata_exer %>%  ggplot(mapping = aes(x = as_factor(memory) , y = pa )) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_audience = keydata_exer %>%  ggplot(mapping = aes(x = as_factor(audience) , y = pa )) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(c)")
pa_categorical = grid.arrange(pa_perform, pa_memory, pa_audience, ncol = 2)
pa_categorical
keydata_exer_level_2 = keydata_exer %>%  group_by(id) %>%
filter(row_number() == 1) %>%
dplyr::select(id, pa:mpqnem)
pa_categorical_level_1 = grid.arrange(pa_perform, pa_memory, pa_audience, ncol = 2)
pa_categorical_level_1
rm(pa_categorical)
pa_gender = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(gender), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_instrument = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(instrument), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_categorical_level_2 = grid.arrange(pa_gender, pa_instrument)
pa_categorical_level_2
View(meanby_subj_pa)
View(meanby_subj_pa)
keydata_exer_level_2$mean_by_subj_pa = mean_by_subj_pa$mean_val
keydata_exer_level_2$meanby_subj_pa = meanby_subj_pa$mean_val
pa_gender = keydata_exer %>% ggplot(mapping = aes(x = as_factor(gender), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_gender_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(gender), y = mean_val)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_instrument = keydata_exer %>% ggplot(mapping = aes(x = as_factor(instrument), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(c)")
pa_instrument_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(instrument), y = mean_val)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(d)")
pa_categorical_level_2 = grid.arrange(pa_gender, pa_gender_by_mean, pa_instrument, pa_instrument_by_mean)
pa_gender = keydata_exer %>% ggplot(mapping = aes(x = as_factor(gender), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_gender_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(gender), y = mean_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_instrument = keydata_exer %>% ggplot(mapping = aes(x = as_factor(instrument), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(c)")
pa_instrument_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(instrument), y = mean_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(d)")
pa_categorical_level_2 = grid.arrange(pa_gender, pa_gender_by_mean, pa_instrument, pa_instrument_by_mean)
pa_gender = keydata_exer %>% ggplot(mapping = aes(x = as_factor(gender), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_gender_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(gender), y = meanby_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_instrument = keydata_exer %>% ggplot(mapping = aes(x = as_factor(instrument), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(c)")
pa_instrument_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(instrument), y = meanby_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(d)")
pa_categorical_level_2 = grid.arrange(pa_gender, pa_gender_by_mean, pa_instrument, pa_instrument_by_mean)
pa_categorical_level_2
pa_gender = keydata_exer %>% ggplot(mapping = aes(x = as_factor(gender), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(a)")
pa_gender_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(gender), y = meanby_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(b)")
pa_instrument = keydata_exer %>% ggplot(mapping = aes(x = as_factor(instrument), y = pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(c)")
pa_instrument_by_mean = keydata_exer_level_2 %>% ggplot(mapping = aes(x = as_factor(instrument), y = meanby_subj_pa)) + geom_boxplot() + theme.1 +
coord_flip() + ylab("Positive Affect") + xlab("") + labs(title = "(d)")
pa_categorical_level_2 = grid.arrange(pa_gender, pa_gender_by_mean, pa_instrument, pa_instrument_by_mean)
pa_categorical_level_2
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") labs(title = "(a)")
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") labs(title = "(a)")
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") labs(title = "(a)")
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") + labs(title = "(a)")
pa_mpqpem = keydata_exer %>% ggplot(mapping = aes(x = mpqpem, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("PEM") + labs(title = "(b)")
pa_mpqnem = keydata_exer %>% ggplot(mapping = aes(x = mpqnem, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("NEM") + labs(title = "(c)")
pa_mpqab_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") + labs(title = "(d)")
pa_mpqpem_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqpem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("PEM") + labs(title = "(e)")
pa_mpqnem_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqnem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("NEM") + labs(title = "(f)")
pa_continous_level_2 = grid.arrange(pa_mpqab, pa_mpqpem, pa_mpqnem, pa_mpqab_one_obs, pa_mpqpem_one_obs, pa_mpqnem_one_obs)
pa_continous_level_2
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") + labs(title = "(a)")
pa_mpqpem = keydata_exer %>% ggplot(mapping = aes(x = mpqpem, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("PEM") + labs(title = "(b)")
pa_mpqnem = keydata_exer %>% ggplot(mapping = aes(x = mpqnem, y = pa)) + geom_point() + geom_smooth(mehtod = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("NEM") + labs(title = "(c)")
pa_mpqab = keydata_exer %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") + labs(title = "(a)")
pa_mpqpem = keydata_exer %>% ggplot(mapping = aes(x = mpqpem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("PEM") + labs(title = "(b)")
pa_mpqnem = keydata_exer %>% ggplot(mapping = aes(x = mpqnem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("NEM") + labs(title = "(c)")
pa_mpqab_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqab, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("AB") + labs(title = "(d)")
pa_mpqpem_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqpem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("PEM") + labs(title = "(e)")
pa_mpqnem_one_obs = keydata_exer_level_2 %>% ggplot(mapping = aes(x = mpqnem, y = pa)) + geom_point() + geom_smooth(method = "lm", color = "black") +
theme.1 + ylab("Positive Affect") + xlab("NEM") + labs(title = "(f)")
pa_continous_level_2 = grid.arrange(pa_mpqab, pa_mpqpem, pa_mpqnem, pa_mpqab_one_obs, pa_mpqpem_one_obs, pa_mpqnem_one_obs)
pa_continous_level_2
library(usethis)
library(gitcreds)
gitcreds_set()
